//
// Copyright 2022 Han Xin, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: shared.proto

package pb

import (
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid uint32 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{1}
}

func (x *Owner) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Owner) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type Caller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Pid   uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *Caller) Reset() {
	*x = Caller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Caller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Caller) ProtoMessage() {}

func (x *Caller) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Caller.ProtoReflect.Descriptor instead.
func (*Caller) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{2}
}

func (x *Caller) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Caller) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type InHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length  uint32  `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
	Opcode  uint32  `protobuf:"varint,2,opt,name=Opcode,proto3" json:"Opcode,omitempty"`
	Unique  uint64  `protobuf:"varint,3,opt,name=Unique,proto3" json:"Unique,omitempty"`
	NodeId  uint64  `protobuf:"varint,4,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Caller  *Caller `protobuf:"bytes,5,opt,name=Caller,proto3" json:"Caller,omitempty"`
	Padding uint32  `protobuf:"varint,6,opt,name=Padding,proto3" json:"Padding,omitempty"`
}

func (x *InHeader) Reset() {
	*x = InHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InHeader) ProtoMessage() {}

func (x *InHeader) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InHeader.ProtoReflect.Descriptor instead.
func (*InHeader) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{3}
}

func (x *InHeader) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *InHeader) GetOpcode() uint32 {
	if x != nil {
		return x.Opcode
	}
	return 0
}

func (x *InHeader) GetUnique() uint64 {
	if x != nil {
		return x.Unique
	}
	return 0
}

func (x *InHeader) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *InHeader) GetCaller() *Caller {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *InHeader) GetPadding() uint32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

type Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino       uint64 `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Size      uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Blocks    uint64 `protobuf:"varint,3,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Atime     uint64 `protobuf:"varint,4,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime     uint64 `protobuf:"varint,5,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime     uint64 `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Atimensec uint32 `protobuf:"varint,7,opt,name=atimensec,proto3" json:"atimensec,omitempty"`
	Mtimensec uint32 `protobuf:"varint,8,opt,name=mtimensec,proto3" json:"mtimensec,omitempty"`
	Ctimensec uint32 `protobuf:"varint,9,opt,name=ctimensec,proto3" json:"ctimensec,omitempty"`
	Mode      uint32 `protobuf:"varint,10,opt,name=mode,proto3" json:"mode,omitempty"`
	Nlink     uint32 `protobuf:"varint,11,opt,name=nlink,proto3" json:"nlink,omitempty"`
	Owner     *Owner `protobuf:"bytes,12,opt,name=owner,proto3" json:"owner,omitempty"`
	Rdev      uint32 `protobuf:"varint,13,opt,name=rdev,proto3" json:"rdev,omitempty"`
	// OS X
	Flags uint32 `protobuf:"varint,14,opt,name=flags,proto3" json:"flags,omitempty"`
	// linux
	Blksize uint32 `protobuf:"varint,15,opt,name=blksize,proto3" json:"blksize,omitempty"`
	Padding uint32 `protobuf:"varint,16,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *Attr) Reset() {
	*x = Attr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attr) ProtoMessage() {}

func (x *Attr) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attr.ProtoReflect.Descriptor instead.
func (*Attr) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{4}
}

func (x *Attr) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *Attr) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Attr) GetBlocks() uint64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *Attr) GetAtime() uint64 {
	if x != nil {
		return x.Atime
	}
	return 0
}

func (x *Attr) GetMtime() uint64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *Attr) GetCtime() uint64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Attr) GetAtimensec() uint32 {
	if x != nil {
		return x.Atimensec
	}
	return 0
}

func (x *Attr) GetMtimensec() uint32 {
	if x != nil {
		return x.Mtimensec
	}
	return 0
}

func (x *Attr) GetCtimensec() uint32 {
	if x != nil {
		return x.Ctimensec
	}
	return 0
}

func (x *Attr) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Attr) GetNlink() uint32 {
	if x != nil {
		return x.Nlink
	}
	return 0
}

func (x *Attr) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Attr) GetRdev() uint32 {
	if x != nil {
		return x.Rdev
	}
	return 0
}

func (x *Attr) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Attr) GetBlksize() uint32 {
	if x != nil {
		return x.Blksize
	}
	return 0
}

func (x *Attr) GetPadding() uint32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

type AttrOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrValid     uint64 `protobuf:"varint,1,opt,name=attr_valid,json=attrValid,proto3" json:"attr_valid,omitempty"`
	AttrValidNsec uint32 `protobuf:"varint,2,opt,name=attr_valid_nsec,json=attrValidNsec,proto3" json:"attr_valid_nsec,omitempty"`
	Dummy         uint32 `protobuf:"varint,3,opt,name=dummy,proto3" json:"dummy,omitempty"`
	Attr          *Attr  `protobuf:"bytes,4,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *AttrOut) Reset() {
	*x = AttrOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrOut) ProtoMessage() {}

func (x *AttrOut) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrOut.ProtoReflect.Descriptor instead.
func (*AttrOut) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{5}
}

func (x *AttrOut) GetAttrValid() uint64 {
	if x != nil {
		return x.AttrValid
	}
	return 0
}

func (x *AttrOut) GetAttrValidNsec() uint32 {
	if x != nil {
		return x.AttrValidNsec
	}
	return 0
}

func (x *AttrOut) GetDummy() uint32 {
	if x != nil {
		return x.Dummy
	}
	return 0
}

func (x *AttrOut) GetAttr() *Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type EntryOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId         uint64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Generation     uint64 `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	EntryValid     uint64 `protobuf:"varint,3,opt,name=entry_valid,json=entryValid,proto3" json:"entry_valid,omitempty"`
	AttrValid      uint64 `protobuf:"varint,4,opt,name=attr_valid,json=attrValid,proto3" json:"attr_valid,omitempty"`
	EntryValidNsec uint32 `protobuf:"varint,5,opt,name=entry_valid_nsec,json=entryValidNsec,proto3" json:"entry_valid_nsec,omitempty"`
	AttrValidNsec  uint32 `protobuf:"varint,6,opt,name=attr_valid_nsec,json=attrValidNsec,proto3" json:"attr_valid_nsec,omitempty"`
	Attr           *Attr  `protobuf:"bytes,7,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *EntryOut) Reset() {
	*x = EntryOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryOut) ProtoMessage() {}

func (x *EntryOut) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryOut.ProtoReflect.Descriptor instead.
func (*EntryOut) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{6}
}

func (x *EntryOut) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *EntryOut) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *EntryOut) GetEntryValid() uint64 {
	if x != nil {
		return x.EntryValid
	}
	return 0
}

func (x *EntryOut) GetAttrValid() uint64 {
	if x != nil {
		return x.AttrValid
	}
	return 0
}

func (x *EntryOut) GetEntryValidNsec() uint32 {
	if x != nil {
		return x.EntryValidNsec
	}
	return 0
}

func (x *EntryOut) GetAttrValidNsec() uint32 {
	if x != nil {
		return x.AttrValidNsec
	}
	return 0
}

func (x *EntryOut) GetAttr() *Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type OpenIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *InHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Flags  uint32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Mode   uint32    `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *OpenIn) Reset() {
	*x = OpenIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenIn) ProtoMessage() {}

func (x *OpenIn) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenIn.ProtoReflect.Descriptor instead.
func (*OpenIn) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{7}
}

func (x *OpenIn) GetHeader() *InHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *OpenIn) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *OpenIn) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type OpenOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fh        uint64 `protobuf:"varint,1,opt,name=fh,proto3" json:"fh,omitempty"`
	OpenFlags uint32 `protobuf:"varint,2,opt,name=open_flags,json=openFlags,proto3" json:"open_flags,omitempty"`
	Padding   uint32 `protobuf:"varint,3,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *OpenOut) Reset() {
	*x = OpenOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOut) ProtoMessage() {}

func (x *OpenOut) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOut.ProtoReflect.Descriptor instead.
func (*OpenOut) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{8}
}

func (x *OpenOut) GetFh() uint64 {
	if x != nil {
		return x.Fh
	}
	return 0
}

func (x *OpenOut) GetOpenFlags() uint32 {
	if x != nil {
		return x.OpenFlags
	}
	return 0
}

func (x *OpenOut) GetPadding() uint32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

type ReadIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *InHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Fh        uint64    `protobuf:"varint,2,opt,name=fh,proto3" json:"fh,omitempty"`
	Offset    uint64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Size      uint32    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ReadFlags uint32    `protobuf:"varint,5,opt,name=read_flags,json=readFlags,proto3" json:"read_flags,omitempty"`
}

func (x *ReadIn) Reset() {
	*x = ReadIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadIn) ProtoMessage() {}

func (x *ReadIn) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadIn.ProtoReflect.Descriptor instead.
func (*ReadIn) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{9}
}

func (x *ReadIn) GetHeader() *InHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ReadIn) GetFh() uint64 {
	if x != nil {
		return x.Fh
	}
	return 0
}

func (x *ReadIn) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadIn) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReadIn) GetReadFlags() uint32 {
	if x != nil {
		return x.ReadFlags
	}
	return 0
}

type FileLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Type  uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Pid   uint32 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *FileLock) Reset() {
	*x = FileLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLock) ProtoMessage() {}

func (x *FileLock) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLock.ProtoReflect.Descriptor instead.
func (*FileLock) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{10}
}

func (x *FileLock) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *FileLock) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *FileLock) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FileLock) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type DirEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode uint32 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Ino  uint64 `protobuf:"varint,2,opt,name=ino,proto3" json:"ino,omitempty"`
	Name []byte `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DirEntry) Reset() {
	*x = DirEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirEntry) ProtoMessage() {}

func (x *DirEntry) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirEntry.ProtoReflect.Descriptor instead.
func (*DirEntry) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{11}
}

func (x *DirEntry) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *DirEntry) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *DirEntry) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

var File_shared_proto protoreflect.FileDescriptor

var file_shared_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x47, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x29, 0xfa, 0xde, 0x1f, 0x25, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x6e, 0x77, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2d, 0x66, 0x75, 0x73, 0x65, 0x2f, 0x66, 0x75, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x70, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x43,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x22,
	0x89, 0x03, 0x0a, 0x04, 0x41, 0x74, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x74, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65,
	0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x64, 0x65, 0x76, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x64, 0x65,
	0x76, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6b, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6c, 0x6b, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x07,
	0x41, 0x74, 0x74, 0x72, 0x4f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x73, 0x65, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64,
	0x75, 0x6d, 0x6d, 0x79, 0x12, 0x1c, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x22, 0xf3, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x73,
	0x65, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x74, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x58, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x22, 0x52, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x66, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x12, 0x24, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x66, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x22, 0x58, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x08,
	0x44, 0x69, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_proto_rawDescOnce sync.Once
	file_shared_proto_rawDescData = file_shared_proto_rawDesc
)

func file_shared_proto_rawDescGZIP() []byte {
	file_shared_proto_rawDescOnce.Do(func() {
		file_shared_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_proto_rawDescData)
	})
	return file_shared_proto_rawDescData
}

var file_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_shared_proto_goTypes = []interface{}{
	(*Status)(nil),   // 0: pb.Status
	(*Owner)(nil),    // 1: pb.Owner
	(*Caller)(nil),   // 2: pb.Caller
	(*InHeader)(nil), // 3: pb.InHeader
	(*Attr)(nil),     // 4: pb.Attr
	(*AttrOut)(nil),  // 5: pb.AttrOut
	(*EntryOut)(nil), // 6: pb.EntryOut
	(*OpenIn)(nil),   // 7: pb.OpenIn
	(*OpenOut)(nil),  // 8: pb.OpenOut
	(*ReadIn)(nil),   // 9: pb.ReadIn
	(*FileLock)(nil), // 10: pb.FileLock
	(*DirEntry)(nil), // 11: pb.DirEntry
}
var file_shared_proto_depIdxs = []int32{
	1, // 0: pb.Caller.owner:type_name -> pb.Owner
	2, // 1: pb.InHeader.Caller:type_name -> pb.Caller
	1, // 2: pb.Attr.owner:type_name -> pb.Owner
	4, // 3: pb.AttrOut.attr:type_name -> pb.Attr
	4, // 4: pb.EntryOut.attr:type_name -> pb.Attr
	3, // 5: pb.OpenIn.header:type_name -> pb.InHeader
	3, // 6: pb.ReadIn.header:type_name -> pb.InHeader
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_shared_proto_init() }
func file_shared_proto_init() {
	if File_shared_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Caller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_proto_goTypes,
		DependencyIndexes: file_shared_proto_depIdxs,
		MessageInfos:      file_shared_proto_msgTypes,
	}.Build()
	File_shared_proto = out.File
	file_shared_proto_rawDesc = nil
	file_shared_proto_goTypes = nil
	file_shared_proto_depIdxs = nil
}
